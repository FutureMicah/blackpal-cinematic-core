@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* The Black Universe - Core colors */
    --background: 240 20% 4%;
    --foreground: 0 0% 98%;

    /* Card & surfaces - Ultra glassmorphic */
    --card: 240 15% 8%;
    --card-foreground: 0 0% 98%;

    --popover: 240 15% 8%;
    --popover-foreground: 0 0% 98%;

    /* Primary - Electric cyan */
    --primary: 188 100% 50%;
    --primary-foreground: 240 20% 4%;

    /* Secondary - Neon pink */
    --secondary: 330 100% 50%;
    --secondary-foreground: 0 0% 98%;

    /* Muted - Subtle dark blue */
    --muted: 240 15% 12%;
    --muted-foreground: 240 5% 65%;

    /* Accent - Emerald green */
    --accent: 150 100% 50%;
    --accent-foreground: 240 20% 4%;

    /* Destructive - Neon red */
    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 15% 15%;
    --input: 240 15% 12%;
    --ring: 188 100% 50%;

    --radius: 1.5rem;

    /* Premium accent colors */
    --gold: 45 100% 50%;
    --purple: 270 100% 60%;
    --orange: 30 100% 55%;
    --blue: 220 100% 60%;
    
    /* Colorful gradients inspired by reference */
    --gradient-cyber: linear-gradient(135deg, hsl(188 100% 50%), hsl(330 100% 50%));
    --gradient-wealth: linear-gradient(135deg, hsl(45 100% 50%), hsl(30 100% 50%));
    --gradient-success: linear-gradient(135deg, hsl(150 100% 50%), hsl(188 100% 50%));
    --gradient-orange: linear-gradient(135deg, hsl(30 100% 55%), hsl(45 100% 50%));
    --gradient-blue: linear-gradient(135deg, hsl(220 100% 60%), hsl(188 100% 50%));
    --gradient-purple: linear-gradient(135deg, hsl(270 100% 60%), hsl(330 100% 50%));
    --gradient-pink: linear-gradient(135deg, hsl(330 100% 50%), hsl(350 100% 55%));
    --gradient-green: linear-gradient(135deg, hsl(150 100% 50%), hsl(170 100% 50%));
    
    /* 3D depth shadows */
    --shadow-sm: 0 2px 8px hsl(240 20% 0% / 0.3);
    --shadow-md: 0 4px 16px hsl(240 20% 0% / 0.4);
    --shadow-lg: 0 8px 32px hsl(240 20% 0% / 0.5);
    --shadow-xl: 0 16px 64px hsl(240 20% 0% / 0.6);
    
    /* Glow effects */
    --glow-cyan: 0 0 20px hsl(188 100% 50% / 0.5);
    --glow-pink: 0 0 20px hsl(330 100% 50% / 0.5);
    --glow-gold: 0 0 20px hsl(45 100% 50% / 0.5);
    --glow-green: 0 0 20px hsl(150 100% 50% / 0.5);
    --glow-purple: 0 0 20px hsl(270 100% 60% / 0.5);
    --glow-orange: 0 0 20px hsl(30 100% 55% / 0.5);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground overflow-x-hidden;
    cursor: none;
  }
  
  /* Custom cursor */
  .cursor {
    pointer-events: none;
    position: fixed;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: hsl(var(--primary));
    box-shadow: var(--glow-cyan);
    transform: translate(-50%, -50%);
    z-index: 9999;
    transition: width 0.2s, height 0.2s, background 0.3s;
  }
  
  .cursor-trail {
    pointer-events: none;
    position: fixed;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: hsl(var(--primary) / 0.5);
    z-index: 9998;
    transition: opacity 0.3s;
  }
}

@layer utilities {
  /* Premium animations */
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  .animate-glow-pulse {
    animation: glow-pulse 2s ease-in-out infinite;
  }
  
  .animate-slide-up {
    animation: slide-up 0.6s ease-out;
  }
  
  .animate-scale-in {
    animation: scale-in 0.4s ease-out;
  }
  
  .animate-particle {
    animation: particle-float 3s ease-in-out infinite;
  }
  
  /* Enhanced glassmorphic effects */
  .glass {
    background: hsl(var(--card) / 0.6);
    backdrop-filter: blur(20px);
    border: 1px solid hsl(var(--border) / 0.3);
  }
  
  .glass-strong {
    background: hsl(var(--card) / 0.8);
    backdrop-filter: blur(30px);
    border: 1px solid hsl(var(--border) / 0.4);
  }
  
  /* 3D card effect */
  .card-3d {
    transform-style: preserve-3d;
    transition: transform 0.3s ease;
  }
  
  .card-3d:hover {
    transform: translateY(-8px) rotateX(2deg);
  }
  
  /* Neon glow effects */
  .glow-cyan {
    box-shadow: var(--glow-cyan);
  }
  
  .glow-pink {
    box-shadow: var(--glow-pink);
  }
  
  .glow-gold {
    box-shadow: var(--glow-gold);
  }
  
  .glow-green {
    box-shadow: var(--glow-green);
  }
  
  .glow-purple {
    box-shadow: var(--glow-purple);
  }
  
  .glow-orange {
    box-shadow: var(--glow-orange);
  }
  
  /* Gradient backgrounds */
  .bg-gradient-orange {
    background: var(--gradient-orange);
  }
  
  .bg-gradient-blue {
    background: var(--gradient-blue);
  }
  
  .bg-gradient-purple {
    background: var(--gradient-purple);
  }
  
  .bg-gradient-pink {
    background: var(--gradient-pink);
  }
  
  .bg-gradient-green {
    background: var(--gradient-green);
  }
  
  /* Gradient text */
  .gradient-text-cyber {
    background: var(--gradient-cyber);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .gradient-text-wealth {
    background: var(--gradient-wealth);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  /* Floating 3D effect */
  .float-3d {
    animation: float-3d 4s ease-in-out infinite;
  }
  
  /* Smooth depth shadow */
  .shadow-depth {
    box-shadow: var(--shadow-lg);
  }
  
  .shadow-depth-xl {
    box-shadow: var(--shadow-xl);
  }
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-20px); }
}

@keyframes glow-pulse {
  0%, 100% { filter: brightness(1); }
  50% { filter: brightness(1.3); }
}

@keyframes slide-up {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scale-in {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes particle-float {
  0%, 100% {
    transform: translate(0, 0) rotate(0deg);
    opacity: 0.5;
  }
  50% {
    transform: translate(10px, -10px) rotate(180deg);
    opacity: 1;
  }
}

@keyframes float-3d {
  0%, 100% {
    transform: translateY(0px) translateZ(0px);
  }
  50% {
    transform: translateY(-15px) translateZ(10px);
  }
}
